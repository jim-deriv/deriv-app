name: Playwright Tests
on:
  push:
    branches:
      - master
  issue_comment:
    types: [edited]
jobs:
  run-e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.34.3-jammy
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      # - name: Setup Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      # - name: Install dependencies
      #   run: npm ci
      - name: Install Playwright Browsers
        run: |
          npm install -g playwright@1.34
          npx playwright install --with-deps chromium
      - name: Install Playwright
        run: |
          cd end-to-end-test
          npm install -D @playwright/test
      - name: Create storage file
        run: |
          cd /tmp/
          ls -la
          touch storage-state.json
          echo "{}" > storage-state.json
          ls -la
      - name: Create env file
        run: |
          cd end-to-end-test/
          touch .env
          echo "${{ secrets.PRIVATE_PLAYWRIGHT_ENV_FILE }}" > .env
          echo "${{ vars.PUBLIC_PLAYWRIGHT_ENV_FILE }}" > .env
          echo "CURRENT_BRANCH=${GITHUB_REF#refs/heads/}" >> .env
          mkdir playwright-json-test-results
          echo "Branch: ${{ github.ref }} and Event Name: ${{ github.event_name }}"
      - name: Capture Vercel preview URL if it's a PR
        id: vercel_preview_url
        uses: binary-com/vercel-preview-url-action@v1.0.5
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # preview_url_regexp: \[Visit Preview\]\((.*?.sx)\)
          preview_url_regexp: \[Visit Preview\]\((.*?.vercel.app)\)
        if: github.event_name != 'push'
      - name: Update APP URL in env file if it's a PR
        run: |
          echo "APP_URL=${{ steps.vercel_preview_url.outputs.vercel_preview_url }}" >> end-to-end-test/.env
        if: github.event_name != 'push'
      - name: Run Playwright tests
        run: |
          cd end-to-end-test
          sudo npx playwright test
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Upload JSON test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-json-results
          path: playwright-json-test-results/
          retention-days: 90
# name: Playwright Tests
# on:
#   deployment_status:
# jobs:
#   test:
#     if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-node@v3
#       with:
#         node-version: 16
#     - name: Install dependencies
#       run: npm ci
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps chromium
#     - name: Install Playwright Test
#       run: |
#         cd end-to-end-test
#         npm install -D @playwright/test
#     - name: Create env file
#       run: |
#         cd end-to-end-test/
#         touch .env
#         echo "${{ secrets.PLAYWRIGHT_ENV_FILE }}" > .env
#         echo "APP_URL=${{ github.event.deployment_status.target_url }}" >> .env
#         echo "CI=true" >> .env
#     - name: Run Playwright tests
#       run: |
#         cd end-to-end-test
#         mkdir playwright-json-test-results
#         CURRENT_BRANCH=${GITHUB_REF#refs/heads/} sudo npx playwright test
#     - uses: actions/upload-artifact@v3
#       if: always()
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30
#     - name: Upload JSON test results
#       uses: actions/upload-artifact@v3
#       if: always()
#       with:
#         name: playwright-json-results
#         path: playwright-json-test-results
#         retention-days: 90
#     - name: Download JSON test results
#       uses: actions/download-artifact@v3
#       if: always()
#       with:
#         name: playwright-json-results
#         path: playwright-json-test-results/
#     - name: Extract JSON test results
#       run: |
#         ls -la
#         cd playwright-json-test-results
#         unzip -o playwright-json-test-results.zip
#         ls -la
